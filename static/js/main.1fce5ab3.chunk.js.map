{"version":3,"sources":["panels/main.js","panels/typeCollection.js","panels/collectionForm.js","App.js","sw.js","index.js"],"names":["MainPanel","Fragment","header","mode","onClick","props","changePanel","React","Component","TypeCollection","left","separator","actPanelHeader","changeTitle","style","height","CollectionForm","target","this","getTitle","before","controlSize","top","type","placeholder","defaultValue","value","size","App","panel","setState","activePanel","title","panelHeader","state","console","log","id","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","isLocalhost","Boolean","window","location","hostname","match","bridge","send","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fce5ab3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { PanelHeader, Header, Group, Button } from \"@vkontakte/vkui\";\r\n\r\nclass MainPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PanelHeader>Пожертвования</PanelHeader>\r\n        <Group header={<Header mode=\"secondary\">Items</Header>}>\r\n          <div>У вас пока нет сборов.</div>\r\n          <div>Начните доброе дело.</div>\r\n          <Button mode=\"primary\" onClick={() => { this.props.changePanel('type-collection') }}>Создать сбор</Button>\r\n        </Group>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPanel","import React from \"react\";\r\nimport {\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Button,\r\n  CardGrid,\r\n  Card,\r\n} from \"@vkontakte/vkui\";\r\n\r\nclass TypeCollection extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack\r\n              onClick={() => {\r\n                this.props.changePanel(\"main\");\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          Тип сбора\r\n        </PanelHeader>\r\n\r\n        <Group\r\n          separator=\"hide\"\r\n          onClick={() => {\r\n            this.props.changePanel(\"collection-form\");\r\n            this.props.actPanelHeader.changeTitle(\"Целевой сбор\");\r\n          }}\r\n        >\r\n          <CardGrid>\r\n            <Card>\r\n              <div style={{ height: 96 }}>\r\n                <div>Целевой сбор</div>\r\n                <div>Когда есть определенная цель</div>\r\n              </div>\r\n            </Card>\r\n          </CardGrid>\r\n        </Group>\r\n\r\n        <Group separator=\"hide\">\r\n          <CardGrid>\r\n            <Card>\r\n              <div style={{ height: 96 }}>\r\n                Регулярный сбор Если помощь нужна ежемесячно\r\n              </div>\r\n              <Button\r\n                mode=\"primary\"\r\n                onClick={() => {\r\n                  this.props.changePanel(\"collection-form\");\r\n                  this.props.actPanelHeader.changeTitle(\"Регулярный сбор\");\r\n                }}\r\n              >\r\n                Подробнее\r\n              </Button>\r\n            </Card>\r\n          </CardGrid>\r\n        </Group>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypeCollection;\r\n","import React from \"react\";\r\nimport {\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  FormLayout,\r\n  FormLayoutGroup,\r\n  Input,\r\n  Textarea,\r\n  Select,\r\n  File,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28PictureOutline from \"@vkontakte/icons/dist/28/picture_outline\";\r\n\r\nclass CollectionForm extends React.Component {\r\n  render() {\r\n    const target =\r\n      this.props.actPanelHeader.getTitle() === \"Регулярный сбор\" ? true : false;\r\n    return (\r\n      <React.Fragment>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack\r\n              onClick={() => {\r\n                this.props.changePanel(\"type-collection\");\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          {this.props.actPanelHeader.getTitle()}\r\n        </PanelHeader>\r\n        <FormLayout>\r\n          <File\r\n            before={<Icon28PictureOutline />}\r\n            controlSize=\"xl\"\r\n            mode=\"outline\"\r\n          >\r\n            Загрузить обложку\r\n          </File>\r\n          <FormLayoutGroup top=\"Название сбора\">\r\n            <Input type=\"text\" placeholder=\"Название сбора\" />\r\n          </FormLayoutGroup>\r\n          <FormLayoutGroup top=\"Сумма, ₽\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder={\r\n                target ? \"Сколько нужно в месяц?\" : \"Сколько нужно собрать?\"\r\n              }\r\n            />\r\n          </FormLayoutGroup>\r\n          <FormLayoutGroup top=\"Цель\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder={\r\n                target\r\n                  ? \"Например, поддержка приюта\"\r\n                  : \"Например, лечение человека\"\r\n              }\r\n            />\r\n          </FormLayoutGroup>\r\n          <FormLayoutGroup top=\"Описание\">\r\n            <Textarea placeholder=\"На что пойдут деньги и как они кому-то помогут?\" />\r\n          </FormLayoutGroup>\r\n          <FormLayoutGroup top=\"Куда получать деньги\">\r\n            <Select defaultValue=\"f\">\r\n              <option value=\"f\">Счёт VK Pay · 1234</option>\r\n              <option value=\"m\">first</option>\r\n            </Select>\r\n          </FormLayoutGroup>\r\n          {target ? (\r\n            <FormLayoutGroup>\r\n              <Select defaultValue=\"f\">\r\n                <option value=\"f\">Матвей Правосудов</option>\r\n                <option value=\"m\">first</option>\r\n              </Select>\r\n            </FormLayoutGroup>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button mode=\"primary\" size=\"xl\">\r\n            {target ? \"Создать сбор\" : \"Далее\"}\r\n          </Button>\r\n        </FormLayout>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CollectionForm;\r\n","import React from \"react\";\nimport { View, Panel } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport MainPanel from \"./panels/main\";\nimport TypeCollection from \"./panels/typeCollection\";\nimport CollectionForm from \"./panels/collectionForm\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePanel: \"main\",\n      panelHeader: 'Name'\n    };\n  }\n  changePanel = (panel) =>\n    this.setState({\n      activePanel: panel,\n    });\n\n  actPanelHeader = {\n    changeTitle: (title) => {\n      this.setState({\n        panelHeader: title\n      })\n    },\n    getTitle: () => this.state.panelHeader\n  }\n\n  render() {\n    console.log('render')\n    return (\n      <View activePanel={this.state.activePanel}>\n        <Panel id=\"main\">\n          <MainPanel changePanel={this.changePanel} />\n        </Panel>\n        <Panel id=\"type-collection\">\n          <TypeCollection changePanel={this.changePanel} actPanelHeader={this.actPanelHeader} />\n        </Panel>\n        <Panel id=\"collection-form\">\n          <CollectionForm changePanel={this.changePanel} actPanelHeader={this.actPanelHeader} />\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nimport bridge from '@vkontakte/vk-bridge';\n\n// Init VK App\nbridge.send('VKWebAppInit');\n\n// Service Worker For Cache\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}